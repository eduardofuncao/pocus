import {
  require_react_dom
} from "./chunk-6ZJUQ7RT.js";
import {
  require_react
} from "./chunk-VGQVIESM.js";
import {
  __commonJS,
  __toESM
} from "./chunk-TCQZMY3T.js";

// node_modules/react/cjs/react-jsx-runtime.development.js
var require_react_jsx_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-runtime.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React = require_react();
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x2) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var assign = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x2) {
                var match = x2.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x2) {
                  control = x2;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x2) {
                  control = x2;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x2) {
                control = x2;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s2 = sampleLines.length - 1;
              var c2 = controlLines.length - 1;
              while (s2 >= 1 && c2 >= 0 && sampleLines[s2] !== controlLines[c2]) {
                c2--;
              }
              for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                if (sampleLines[s2] !== controlLines[c2]) {
                  if (s2 !== 1 || c2 !== 1) {
                    do {
                      s2--;
                      c2--;
                      if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                        var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s2 >= 1 && c2 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x2) {
                }
              }
            }
          }
          return "";
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a2) {
          return isArrayImpl(a2);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        var didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function warnIfStringRefCannotBeAutoConverted(config, self) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        function defineKeyPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
        }
        function defineRefPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
        var ReactElement = function(type, key, ref, self, source, owner, props) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function jsxDEV(type, config, maybeKey, source, self) {
          {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            if (maybeKey !== void 0) {
              {
                checkKeyStringCoercion(maybeKey);
              }
              key = "" + maybeKey;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            if (hasValidRef(config)) {
              ref = config.ref;
              warnIfStringRefCannotBeAutoConverted(config, self);
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
            if (type && type.defaultProps) {
              var defaultProps = type.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
            return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function isValidElement2(object) {
          {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
        }
        function getDeclarationErrorAddendum() {
          {
            if (ReactCurrentOwner$1.current) {
              var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
        }
        function getSourceInfoErrorAddendum(source) {
          {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
        }
        function validateExplicitKey(element, parentType) {
          {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
              childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          {
            if (typeof node !== "object") {
              return;
            }
            if (isArray(node)) {
              for (var i2 = 0; i2 < node.length; i2++) {
                var child = node[i2];
                if (isValidElement2(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement2(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement2(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i2 = 0; i2 < keys.length; i2++) {
              var key = keys[i2];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        var didWarnAboutKeySpread = {};
        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
          {
            var validType = isValidElementType(type);
            if (!validType) {
              var info = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendum(source);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
            var element = jsxDEV(type, props, key, source, self);
            if (element == null) {
              return element;
            }
            if (validType) {
              var children = props.children;
              if (children !== void 0) {
                if (isStaticChildren) {
                  if (isArray(children)) {
                    for (var i2 = 0; i2 < children.length; i2++) {
                      validateChildKeys(children[i2], type);
                    }
                    if (Object.freeze) {
                      Object.freeze(children);
                    }
                  } else {
                    error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                  }
                } else {
                  validateChildKeys(children, type);
                }
              }
            }
            {
              if (hasOwnProperty.call(props, "key")) {
                var componentName = getComponentNameFromType(type);
                var keys = Object.keys(props).filter(function(k2) {
                  return k2 !== "key";
                });
                var beforeExample = keys.length > 0 ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
                if (!didWarnAboutKeySpread[componentName + beforeExample]) {
                  var afterExample = keys.length > 0 ? "{" + keys.join(": ..., ") + ": ...}" : "{}";
                  error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);
                  didWarnAboutKeySpread[componentName + beforeExample] = true;
                }
              }
            }
            if (type === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
        }
        function jsxWithValidationStatic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, true);
          }
        }
        function jsxWithValidationDynamic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, false);
          }
        }
        var jsx = jsxWithValidationDynamic;
        var jsxs = jsxWithValidationStatic;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.jsx = jsx;
        exports.jsxs = jsxs;
      })();
    }
  }
});

// node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/react/jsx-runtime.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_jsx_runtime_development();
    }
  }
});

// node_modules/react-kofi/dist/esm/index.js
var e = __toESM(require_react());
var import_react = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var s = __toESM(require_react_dom());
var import_react_dom = __toESM(require_react_dom());
function d(e2, t2, { checkForDefaultPrevented: n2 = true } = {}) {
  return function(r2) {
    if (e2 == null ? void 0 : e2(r2), false === n2 || !r2.defaultPrevented)
      return t2 == null ? void 0 : t2(r2);
  };
}
function f(...e2) {
  return (t2) => e2.forEach((e3) => function(e4, t3) {
    "function" == typeof e4 ? e4(t3) : null != e4 && (e4.current = t3);
  }(e3, t2));
}
function p(...t2) {
  return e.useCallback(f(...t2), t2);
}
function m(...t2) {
  const n2 = t2[0];
  if (1 === t2.length)
    return n2;
  const r2 = () => {
    const r3 = t2.map((e2) => ({ useScope: e2(), scopeName: e2.scopeName }));
    return function(t3) {
      const o2 = r3.reduce((e2, { useScope: n3, scopeName: r4 }) => ({ ...e2, ...n3(t3)[`__scope${r4}`] }), {});
      return e.useMemo(() => ({ [`__scope${n2.scopeName}`]: o2 }), [o2]);
    };
  };
  return r2.scopeName = n2.scopeName, r2;
}
var v = Boolean(globalThis == null ? void 0 : globalThis.document) ? e.useLayoutEffect : () => {
};
var h = e["useId".toString()] || (() => {
});
var g = 0;
function y(t2) {
  const [n2, r2] = e.useState(h());
  return v(() => {
    t2 || r2((e2) => e2 ?? String(g++));
  }, [t2]), t2 || (n2 ? `radix-${n2}` : "");
}
function b(t2) {
  const n2 = e.useRef(t2);
  return e.useEffect(() => {
    n2.current = t2;
  }), e.useMemo(() => (...e2) => {
    var _a;
    return (_a = n2.current) == null ? void 0 : _a.call(n2, ...e2);
  }, []);
}
function E({ prop: t2, defaultProp: n2, onChange: r2 = () => {
} }) {
  const [o2, i2] = function({ defaultProp: t3, onChange: n3 }) {
    const r3 = e.useState(t3), [o3] = r3, i3 = e.useRef(o3), a3 = b(n3);
    return e.useEffect(() => {
      i3.current !== o3 && (a3(o3), i3.current = o3);
    }, [o3, i3, a3]), r3;
  }({ defaultProp: n2, onChange: r2 }), a2 = void 0 !== t2, c2 = a2 ? t2 : o2, u2 = b(r2);
  return [c2, e.useCallback((e2) => {
    if (a2) {
      const n3 = "function" == typeof e2 ? e2(t2) : e2;
      n3 !== t2 && u2(n3);
    } else
      i2(e2);
  }, [a2, t2, i2, u2])];
}
var w = e.forwardRef((t2, n2) => {
  const { children: r2, ...o2 } = t2, i2 = e.Children.toArray(r2), c2 = i2.find(O);
  if (c2) {
    const t3 = c2.props.children, r3 = i2.map((n3) => n3 === c2 ? e.Children.count(t3) > 1 ? e.Children.only(null) : e.isValidElement(t3) ? t3.props.children : null : n3);
    return (0, import_jsx_runtime.jsx)(C, { ...o2, ref: n2, children: e.isValidElement(t3) ? e.cloneElement(t3, void 0, r3) : null });
  }
  return (0, import_jsx_runtime.jsx)(C, { ...o2, ref: n2, children: r2 });
});
w.displayName = "Slot";
var C = e.forwardRef((t2, n2) => {
  const { children: r2, ...o2 } = t2;
  if (e.isValidElement(r2)) {
    const t3 = function(e2) {
      var _a, _b;
      let t4 = (_a = Object.getOwnPropertyDescriptor(e2.props, "ref")) == null ? void 0 : _a.get, n3 = t4 && "isReactWarning" in t4 && t4.isReactWarning;
      if (n3)
        return e2.ref;
      if (t4 = (_b = Object.getOwnPropertyDescriptor(e2, "ref")) == null ? void 0 : _b.get, n3 = t4 && "isReactWarning" in t4 && t4.isReactWarning, n3)
        return e2.props.ref;
      return e2.props.ref || e2.ref;
    }(r2);
    return e.cloneElement(r2, { ...x(o2, r2.props), ref: n2 ? f(n2, t3) : t3 });
  }
  return e.Children.count(r2) > 1 ? e.Children.only(null) : null;
});
C.displayName = "SlotClone";
var N = ({ children: e2 }) => (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: e2 });
function O(t2) {
  return e.isValidElement(t2) && t2.type === N;
}
function x(e2, t2) {
  const n2 = { ...t2 };
  for (const r2 in t2) {
    const o2 = e2[r2], i2 = t2[r2];
    /^on[A-Z]/.test(r2) ? o2 && i2 ? n2[r2] = (...e3) => {
      i2(...e3), o2(...e3);
    } : o2 && (n2[r2] = o2) : "style" === r2 ? n2[r2] = { ...o2, ...i2 } : "className" === r2 && (n2[r2] = [o2, i2].filter(Boolean).join(" "));
  }
  return { ...e2, ...n2 };
}
var R = ["a", "button", "div", "form", "h2", "h3", "img", "input", "label", "li", "nav", "ol", "p", "span", "svg", "ul"].reduce((t2, n2) => {
  const r2 = e.forwardRef((e2, t3) => {
    const { asChild: r3, ...o2 } = e2, i2 = r3 ? w : n2;
    return "undefined" != typeof window && (window[Symbol.for("radix-ui")] = true), (0, import_jsx_runtime.jsx)(i2, { ...o2, ref: t3 });
  });
  return r2.displayName = `Primitive.${n2}`, { ...t2, [n2]: r2 };
}, {});
var k;
var S = "dismissableLayer.update";
var D = "dismissableLayer.pointerDownOutside";
var P = "dismissableLayer.focusOutside";
var L = e.createContext({ layers: /* @__PURE__ */ new Set(), layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(), branches: /* @__PURE__ */ new Set() });
var T = e.forwardRef((t2, n2) => {
  const { disableOutsidePointerEvents: r2 = false, onEscapeKeyDown: o2, onPointerDownOutside: i2, onFocusOutside: c2, onInteractOutside: u2, onDismiss: s2, ...l2 } = t2, f2 = e.useContext(L), [m2, v2] = e.useState(null), h2 = (m2 == null ? void 0 : m2.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document), [, g2] = e.useState({}), y2 = p(n2, (e2) => v2(e2)), E2 = Array.from(f2.layers), [w2] = [...f2.layersWithOutsidePointerEventsDisabled].slice(-1), C2 = E2.indexOf(w2), N2 = m2 ? E2.indexOf(m2) : -1, O2 = f2.layersWithOutsidePointerEventsDisabled.size > 0, x2 = N2 >= C2, T2 = function(t3, n3 = globalThis == null ? void 0 : globalThis.document) {
    const r3 = b(t3), o3 = e.useRef(false), i3 = e.useRef(() => {
    });
    return e.useEffect(() => {
      const e2 = (e3) => {
        if (e3.target && !o3.current) {
          let t5 = function() {
            _(D, r3, o4, { discrete: true });
          };
          const o4 = { originalEvent: e3 };
          "touch" === e3.pointerType ? (n3.removeEventListener("click", i3.current), i3.current = t5, n3.addEventListener("click", i3.current, { once: true })) : t5();
        } else
          n3.removeEventListener("click", i3.current);
        o3.current = false;
      }, t4 = window.setTimeout(() => {
        n3.addEventListener("pointerdown", e2);
      }, 0);
      return () => {
        window.clearTimeout(t4), n3.removeEventListener("pointerdown", e2), n3.removeEventListener("click", i3.current);
      };
    }, [n3, r3]), { onPointerDownCapture: () => o3.current = true };
  }((e2) => {
    const t3 = e2.target, n3 = [...f2.branches].some((e3) => e3.contains(t3));
    x2 && !n3 && (i2 == null ? void 0 : i2(e2), u2 == null ? void 0 : u2(e2), e2.defaultPrevented || (s2 == null ? void 0 : s2()));
  }, h2), I2 = function(t3, n3 = globalThis == null ? void 0 : globalThis.document) {
    const r3 = b(t3), o3 = e.useRef(false);
    return e.useEffect(() => {
      const e2 = (e3) => {
        if (e3.target && !o3.current) {
          _(P, r3, { originalEvent: e3 }, { discrete: false });
        }
      };
      return n3.addEventListener("focusin", e2), () => n3.removeEventListener("focusin", e2);
    }, [n3, r3]), { onFocusCapture: () => o3.current = true, onBlurCapture: () => o3.current = false };
  }((e2) => {
    const t3 = e2.target;
    [...f2.branches].some((e3) => e3.contains(t3)) || (c2 == null ? void 0 : c2(e2), u2 == null ? void 0 : u2(e2), e2.defaultPrevented || (s2 == null ? void 0 : s2()));
  }, h2);
  return function(t3, n3 = globalThis == null ? void 0 : globalThis.document) {
    const r3 = b(t3);
    e.useEffect(() => {
      const e2 = (e3) => {
        "Escape" === e3.key && r3(e3);
      };
      return n3.addEventListener("keydown", e2, { capture: true }), () => n3.removeEventListener("keydown", e2, { capture: true });
    }, [r3, n3]);
  }((e2) => {
    N2 === f2.layers.size - 1 && (o2 == null ? void 0 : o2(e2), !e2.defaultPrevented && s2 && (e2.preventDefault(), s2()));
  }, h2), e.useEffect(() => {
    if (m2)
      return r2 && (0 === f2.layersWithOutsidePointerEventsDisabled.size && (k = h2.body.style.pointerEvents, h2.body.style.pointerEvents = "none"), f2.layersWithOutsidePointerEventsDisabled.add(m2)), f2.layers.add(m2), M(), () => {
        r2 && 1 === f2.layersWithOutsidePointerEventsDisabled.size && (h2.body.style.pointerEvents = k);
      };
  }, [m2, h2, r2, f2]), e.useEffect(() => () => {
    m2 && (f2.layers.delete(m2), f2.layersWithOutsidePointerEventsDisabled.delete(m2), M());
  }, [m2, f2]), e.useEffect(() => {
    const e2 = () => g2({});
    return document.addEventListener(S, e2), () => document.removeEventListener(S, e2);
  }, []), (0, import_jsx_runtime.jsx)(R.div, { ...l2, ref: y2, style: { pointerEvents: O2 ? x2 ? "auto" : "none" : void 0, ...t2.style }, onFocusCapture: d(t2.onFocusCapture, I2.onFocusCapture), onBlurCapture: d(t2.onBlurCapture, I2.onBlurCapture), onPointerDownCapture: d(t2.onPointerDownCapture, T2.onPointerDownCapture) });
});
T.displayName = "DismissableLayer";
function M() {
  const e2 = new CustomEvent(S);
  document.dispatchEvent(e2);
}
function _(e2, t2, n2, { discrete: r2 }) {
  const o2 = n2.originalEvent.target, i2 = new CustomEvent(e2, { bubbles: false, cancelable: true, detail: n2 });
  t2 && o2.addEventListener(e2, t2, { once: true }), r2 ? function(e3, t3) {
    e3 && s.flushSync(() => e3.dispatchEvent(t3));
  }(o2, i2) : o2.dispatchEvent(i2);
}
e.forwardRef((t2, n2) => {
  const r2 = e.useContext(L), o2 = e.useRef(null), i2 = p(n2, o2);
  return e.useEffect(() => {
    const e2 = o2.current;
    if (e2)
      return r2.branches.add(e2), () => {
        r2.branches.delete(e2);
      };
  }, [r2.branches]), (0, import_jsx_runtime.jsx)(R.div, { ...t2, ref: i2 });
}).displayName = "DismissableLayerBranch";
var I = "focusScope.autoFocusOnMount";
var A = "focusScope.autoFocusOnUnmount";
var F = { bubbles: false, cancelable: true };
var W = e.forwardRef((t2, n2) => {
  const { loop: r2 = false, trapped: o2 = false, onMountAutoFocus: i2, onUnmountAutoFocus: c2, ...u2 } = t2, [s2, l2] = e.useState(null), d2 = b(i2), f2 = b(c2), m2 = e.useRef(null), v2 = p(n2, (e2) => l2(e2)), h2 = e.useRef({ paused: false, pause() {
    this.paused = true;
  }, resume() {
    this.paused = false;
  } }).current;
  e.useEffect(() => {
    if (o2) {
      let e2 = function(e3) {
        if (h2.paused || !s2)
          return;
        const t4 = e3.target;
        s2.contains(t4) ? m2.current = t4 : U(m2.current, { select: true });
      }, t3 = function(e3) {
        if (h2.paused || !s2)
          return;
        const t4 = e3.relatedTarget;
        null !== t4 && (s2.contains(t4) || U(m2.current, { select: true }));
      }, n3 = function(e3) {
        if (document.activeElement === document.body)
          for (const t4 of e3)
            t4.removedNodes.length > 0 && U(s2);
      };
      document.addEventListener("focusin", e2), document.addEventListener("focusout", t3);
      const r3 = new MutationObserver(n3);
      return s2 && r3.observe(s2, { childList: true, subtree: true }), () => {
        document.removeEventListener("focusin", e2), document.removeEventListener("focusout", t3), r3.disconnect();
      };
    }
  }, [o2, s2, h2.paused]), e.useEffect(() => {
    if (s2) {
      K.add(h2);
      const t3 = document.activeElement;
      if (!s2.contains(t3)) {
        const n3 = new CustomEvent(I, F);
        s2.addEventListener(I, d2), s2.dispatchEvent(n3), n3.defaultPrevented || (!function(e3, { select: t4 = false } = {}) {
          const n4 = document.activeElement;
          for (const r3 of e3)
            if (U(r3, { select: t4 }), document.activeElement !== n4)
              return;
        }((e2 = j(s2), e2.filter((e3) => "A" !== e3.tagName)), { select: true }), document.activeElement === t3 && U(s2));
      }
      return () => {
        s2.removeEventListener(I, d2), setTimeout(() => {
          const e3 = new CustomEvent(A, F);
          s2.addEventListener(A, f2), s2.dispatchEvent(e3), e3.defaultPrevented || U(t3 ?? document.body, { select: true }), s2.removeEventListener(A, f2), K.remove(h2);
        }, 0);
      };
    }
    var e2;
  }, [s2, d2, f2, h2]);
  const g2 = e.useCallback((e2) => {
    if (!r2 && !o2)
      return;
    if (h2.paused)
      return;
    const t3 = "Tab" === e2.key && !e2.altKey && !e2.ctrlKey && !e2.metaKey, n3 = document.activeElement;
    if (t3 && n3) {
      const t4 = e2.currentTarget, [o3, i3] = function(e3) {
        const t5 = j(e3), n4 = B(t5, e3), r3 = B(t5.reverse(), e3);
        return [n4, r3];
      }(t4);
      o3 && i3 ? e2.shiftKey || n3 !== i3 ? e2.shiftKey && n3 === o3 && (e2.preventDefault(), r2 && U(i3, { select: true })) : (e2.preventDefault(), r2 && U(o3, { select: true })) : n3 === t4 && e2.preventDefault();
    }
  }, [r2, o2, h2.paused]);
  return (0, import_jsx_runtime.jsx)(R.div, { tabIndex: -1, ...u2, ref: v2, onKeyDown: g2 });
});
function j(e2) {
  const t2 = [], n2 = document.createTreeWalker(e2, NodeFilter.SHOW_ELEMENT, { acceptNode: (e3) => {
    const t3 = "INPUT" === e3.tagName && "hidden" === e3.type;
    return e3.disabled || e3.hidden || t3 ? NodeFilter.FILTER_SKIP : e3.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
  } });
  for (; n2.nextNode(); )
    t2.push(n2.currentNode);
  return t2;
}
function B(e2, t2) {
  for (const n2 of e2)
    if (!$(n2, { upTo: t2 }))
      return n2;
}
function $(e2, { upTo: t2 }) {
  if ("hidden" === getComputedStyle(e2).visibility)
    return true;
  for (; e2; ) {
    if (void 0 !== t2 && e2 === t2)
      return false;
    if ("none" === getComputedStyle(e2).display)
      return true;
    e2 = e2.parentElement;
  }
  return false;
}
function U(e2, { select: t2 = false } = {}) {
  if (e2 && e2.focus) {
    const n2 = document.activeElement;
    e2.focus({ preventScroll: true }), e2 !== n2 && function(e3) {
      return e3 instanceof HTMLInputElement && "select" in e3;
    }(e2) && t2 && e2.select();
  }
}
W.displayName = "FocusScope";
var K = function() {
  let e2 = [];
  return { add(t2) {
    const n2 = e2[0];
    t2 !== n2 && (n2 == null ? void 0 : n2.pause()), e2 = z(e2, t2), e2.unshift(t2);
  }, remove(t2) {
    var _a;
    e2 = z(e2, t2), (_a = e2[0]) == null ? void 0 : _a.resume();
  } };
}();
function z(e2, t2) {
  const n2 = [...e2], r2 = n2.indexOf(t2);
  return -1 !== r2 && n2.splice(r2, 1), n2;
}
var H = e.forwardRef((t2, n2) => {
  var _a;
  const { container: r2, ...o2 } = t2, [i2, c2] = e.useState(false);
  v(() => c2(true), []);
  const u2 = r2 || i2 && ((_a = globalThis == null ? void 0 : globalThis.document) == null ? void 0 : _a.body);
  return u2 ? import_react_dom.default.createPortal((0, import_jsx_runtime.jsx)(R.div, { ...o2, ref: n2 }), u2) : null;
});
H.displayName = "Portal";
var Y = (t2) => {
  const { present: n2, children: r2 } = t2, o2 = function(t3) {
    const [n3, r3] = e.useState(), o3 = e.useRef({}), i3 = e.useRef(t3), a3 = e.useRef("none"), c2 = t3 ? "mounted" : "unmounted", [u2, l2] = function(t4, n4) {
      return e.useReducer((e2, t5) => n4[e2][t5] ?? e2, t4);
    }(c2, { mounted: { UNMOUNT: "unmounted", ANIMATION_OUT: "unmountSuspended" }, unmountSuspended: { MOUNT: "mounted", ANIMATION_END: "unmounted" }, unmounted: { MOUNT: "mounted" } });
    return e.useEffect(() => {
      const e2 = X(o3.current);
      a3.current = "mounted" === u2 ? e2 : "none";
    }, [u2]), v(() => {
      const e2 = o3.current, n4 = i3.current;
      if (n4 !== t3) {
        const r4 = a3.current, o4 = X(e2);
        if (t3)
          l2("MOUNT");
        else if ("none" === o4 || "none" === (e2 == null ? void 0 : e2.display))
          l2("UNMOUNT");
        else {
          l2(n4 && r4 !== o4 ? "ANIMATION_OUT" : "UNMOUNT");
        }
        i3.current = t3;
      }
    }, [t3, l2]), v(() => {
      if (n3) {
        const e2 = (e3) => {
          const t5 = X(o3.current).includes(e3.animationName);
          e3.target === n3 && t5 && s.flushSync(() => l2("ANIMATION_END"));
        }, t4 = (e3) => {
          e3.target === n3 && (a3.current = X(o3.current));
        };
        return n3.addEventListener("animationstart", t4), n3.addEventListener("animationcancel", e2), n3.addEventListener("animationend", e2), () => {
          n3.removeEventListener("animationstart", t4), n3.removeEventListener("animationcancel", e2), n3.removeEventListener("animationend", e2);
        };
      }
      l2("ANIMATION_END");
    }, [n3, l2]), { isPresent: ["mounted", "unmountSuspended"].includes(u2), ref: e.useCallback((e2) => {
      e2 && (o3.current = getComputedStyle(e2)), r3(e2);
    }, []) };
  }(n2), i2 = "function" == typeof r2 ? r2({ present: o2.isPresent }) : e.Children.only(r2), a2 = p(o2.ref, function(e2) {
    var _a, _b;
    let t3 = (_a = Object.getOwnPropertyDescriptor(e2.props, "ref")) == null ? void 0 : _a.get, n3 = t3 && "isReactWarning" in t3 && t3.isReactWarning;
    if (n3)
      return e2.ref;
    if (t3 = (_b = Object.getOwnPropertyDescriptor(e2, "ref")) == null ? void 0 : _b.get, n3 = t3 && "isReactWarning" in t3 && t3.isReactWarning, n3)
      return e2.props.ref;
    return e2.props.ref || e2.ref;
  }(i2));
  return "function" == typeof r2 || o2.isPresent ? e.cloneElement(i2, { ref: a2 }) : null;
};
function X(e2) {
  return (e2 == null ? void 0 : e2.animationName) || "none";
}
Y.displayName = "Presence";
var Z = 0;
function V() {
  const e2 = document.createElement("span");
  return e2.setAttribute("data-radix-focus-guard", ""), e2.tabIndex = 0, e2.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none", e2;
}
var q = function() {
  return q = Object.assign || function(e2) {
    for (var t2, n2 = 1, r2 = arguments.length; n2 < r2; n2++)
      for (var o2 in t2 = arguments[n2])
        Object.prototype.hasOwnProperty.call(t2, o2) && (e2[o2] = t2[o2]);
    return e2;
  }, q.apply(this, arguments);
};
var G = "right-scroll-bar-position";
var J = "width-before-scroll-bar";
function Q(e2, t2) {
  return r2 = t2 || null, o2 = function(t3) {
    return e2.forEach(function(e3) {
      return function(e4, t4) {
        return "function" == typeof e4 ? e4(t4) : e4 && (e4.current = t4), e4;
      }(e3, t3);
    });
  }, (i2 = (0, import_react.useState)(function() {
    return { value: r2, callback: o2, facade: { get current() {
      return i2.value;
    }, set current(e3) {
      var t3 = i2.value;
      t3 !== e3 && (i2.value = e3, i2.callback(e3, t3));
    } } };
  })[0]).callback = o2, i2.facade;
  var r2, o2, i2;
}
var ee = function() {
  return ee = Object.assign || function(e2) {
    for (var t2, n2 = 1, r2 = arguments.length; n2 < r2; n2++)
      for (var o2 in t2 = arguments[n2])
        Object.prototype.hasOwnProperty.call(t2, o2) && (e2[o2] = t2[o2]);
    return e2;
  }, ee.apply(this, arguments);
};
function te(e2) {
  return e2;
}
var ne = function(t2) {
  var n2 = t2.sideCar, r2 = function(e2, t3) {
    var n3 = {};
    for (var r3 in e2)
      Object.prototype.hasOwnProperty.call(e2, r3) && t3.indexOf(r3) < 0 && (n3[r3] = e2[r3]);
    if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
      var o3 = 0;
      for (r3 = Object.getOwnPropertySymbols(e2); o3 < r3.length; o3++)
        t3.indexOf(r3[o3]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, r3[o3]) && (n3[r3[o3]] = e2[r3[o3]]);
    }
    return n3;
  }(t2, ["sideCar"]);
  if (!n2)
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  var o2 = n2.read();
  if (!o2)
    throw new Error("Sidecar medium not found");
  return e.createElement(o2, ee({}, r2));
};
ne.isSideCarExport = true;
var re = function(e2) {
  void 0 === e2 && (e2 = {});
  var t2 = function(e3, t3) {
    void 0 === t3 && (t3 = te);
    var n2 = [], r2 = false;
    return { read: function() {
      if (r2)
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      return n2.length ? n2[n2.length - 1] : e3;
    }, useMedium: function(e4) {
      var o2 = t3(e4, r2);
      return n2.push(o2), function() {
        n2 = n2.filter(function(e5) {
          return e5 !== o2;
        });
      };
    }, assignSyncMedium: function(e4) {
      for (r2 = true; n2.length; ) {
        var t4 = n2;
        n2 = [], t4.forEach(e4);
      }
      n2 = { push: function(t5) {
        return e4(t5);
      }, filter: function() {
        return n2;
      } };
    }, assignMedium: function(e4) {
      r2 = true;
      var t4 = [];
      if (n2.length) {
        var o2 = n2;
        n2 = [], o2.forEach(e4), t4 = n2;
      }
      var i2 = function() {
        var n3 = t4;
        t4 = [], n3.forEach(e4);
      }, a2 = function() {
        return Promise.resolve().then(i2);
      };
      a2(), n2 = { push: function(e5) {
        t4.push(e5), a2();
      }, filter: function(e5) {
        return t4 = t4.filter(e5), n2;
      } };
    } };
  }(null);
  return t2.options = ee({ async: true, ssr: false }, e2), t2;
}();
var oe = function() {
};
var ie = e.forwardRef(function(t2, n2) {
  var r2 = e.useRef(null), o2 = e.useState({ onScrollCapture: oe, onWheelCapture: oe, onTouchMoveCapture: oe }), i2 = o2[0], a2 = o2[1], c2 = t2.forwardProps, u2 = t2.children, s2 = t2.className, l2 = t2.removeScrollBar, d2 = t2.enabled, f2 = t2.shards, p2 = t2.sideCar, m2 = t2.noIsolation, v2 = t2.inert, h2 = t2.allowPinchZoom, g2 = t2.as, y2 = void 0 === g2 ? "div" : g2, b2 = t2.gapMode, E2 = function(e2, t3) {
    var n3 = {};
    for (var r3 in e2)
      Object.prototype.hasOwnProperty.call(e2, r3) && t3.indexOf(r3) < 0 && (n3[r3] = e2[r3]);
    if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
      var o3 = 0;
      for (r3 = Object.getOwnPropertySymbols(e2); o3 < r3.length; o3++)
        t3.indexOf(r3[o3]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, r3[o3]) && (n3[r3[o3]] = e2[r3[o3]]);
    }
    return n3;
  }(t2, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]), w2 = p2, C2 = Q([r2, n2]), N2 = q(q({}, E2), i2);
  return e.createElement(e.Fragment, null, d2 && e.createElement(w2, { sideCar: re, removeScrollBar: l2, shards: f2, noIsolation: m2, inert: v2, setCallbacks: a2, allowPinchZoom: !!h2, lockRef: r2, gapMode: b2 }), c2 ? e.cloneElement(e.Children.only(u2), q(q({}, N2), { ref: C2 })) : e.createElement(y2, q({}, N2, { className: s2, ref: C2 }), u2));
});
ie.defaultProps = { enabled: true, removeScrollBar: true, inert: false }, ie.classNames = { fullWidth: J, zeroRight: G };
function ae() {
  if (!document)
    return null;
  var e2 = document.createElement("style");
  e2.type = "text/css";
  var t2 = function() {
    if ("undefined" != typeof __webpack_nonce__)
      return __webpack_nonce__;
  }();
  return t2 && e2.setAttribute("nonce", t2), e2;
}
var ce = function() {
  var e2 = 0, t2 = null;
  return { add: function(n2) {
    var r2, o2;
    0 == e2 && (t2 = ae()) && (o2 = n2, (r2 = t2).styleSheet ? r2.styleSheet.cssText = o2 : r2.appendChild(document.createTextNode(o2)), function(e3) {
      (document.head || document.getElementsByTagName("head")[0]).appendChild(e3);
    }(t2)), e2++;
  }, remove: function() {
    !--e2 && t2 && (t2.parentNode && t2.parentNode.removeChild(t2), t2 = null);
  } };
};
var ue = function() {
  var t2, n2 = (t2 = ce(), function(n3, r2) {
    e.useEffect(function() {
      return t2.add(n3), function() {
        t2.remove();
      };
    }, [n3 && r2]);
  });
  return function(e2) {
    var t3 = e2.styles, r2 = e2.dynamic;
    return n2(t3, r2), null;
  };
};
var se = { left: 0, top: 0, right: 0, gap: 0 };
var le = function(e2) {
  return parseInt(e2 || "", 10) || 0;
};
var de = function(e2) {
  if (void 0 === e2 && (e2 = "margin"), "undefined" == typeof window)
    return se;
  var t2 = function(e3) {
    var t3 = window.getComputedStyle(document.body), n3 = t3["padding" === e3 ? "paddingLeft" : "marginLeft"], r3 = t3["padding" === e3 ? "paddingTop" : "marginTop"], o2 = t3["padding" === e3 ? "paddingRight" : "marginRight"];
    return [le(n3), le(r3), le(o2)];
  }(e2), n2 = document.documentElement.clientWidth, r2 = window.innerWidth;
  return { left: t2[0], top: t2[1], right: t2[2], gap: Math.max(0, r2 - n2 + t2[2] - t2[0]) };
};
var fe = ue();
var pe = function(e2, t2, n2, r2) {
  var o2 = e2.left, i2 = e2.top, a2 = e2.right, c2 = e2.gap;
  return void 0 === n2 && (n2 = "margin"), "\n  .".concat("with-scroll-bars-hidden", " {\n   overflow: hidden ").concat(r2, ";\n   padding-right: ").concat(c2, "px ").concat(r2, ";\n  }\n  body {\n    overflow: hidden ").concat(r2, ";\n    overscroll-behavior: contain;\n    ").concat([t2 && "position: relative ".concat(r2, ";"), "margin" === n2 && "\n    padding-left: ".concat(o2, "px;\n    padding-top: ").concat(i2, "px;\n    padding-right: ").concat(a2, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(c2, "px ").concat(r2, ";\n    "), "padding" === n2 && "padding-right: ".concat(c2, "px ").concat(r2, ";")].filter(Boolean).join(""), "\n  }\n  \n  .").concat(G, " {\n    right: ").concat(c2, "px ").concat(r2, ";\n  }\n  \n  .").concat(J, " {\n    margin-right: ").concat(c2, "px ").concat(r2, ";\n  }\n  \n  .").concat(G, " .").concat(G, " {\n    right: 0 ").concat(r2, ";\n  }\n  \n  .").concat(J, " .").concat(J, " {\n    margin-right: 0 ").concat(r2, ";\n  }\n  \n  body {\n    ").concat("--removed-body-scroll-bar-size", ": ").concat(c2, "px;\n  }\n");
};
var me = function(t2) {
  var n2 = t2.noRelative, r2 = t2.noImportant, o2 = t2.gapMode, i2 = void 0 === o2 ? "margin" : o2, a2 = e.useMemo(function() {
    return de(i2);
  }, [i2]);
  return e.createElement(fe, { styles: pe(a2, !n2, i2, r2 ? "" : "!important") });
};
var ve = false;
if ("undefined" != typeof window)
  try {
    he = Object.defineProperty({}, "passive", { get: function() {
      return ve = true, true;
    } });
    window.addEventListener("test", he, he), window.removeEventListener("test", he, he);
  } catch (e2) {
    ve = false;
  }
var he;
var ge = !!ve && { passive: false };
var ye = function(e2, t2) {
  var n2 = window.getComputedStyle(e2);
  return "hidden" !== n2[t2] && !(n2.overflowY === n2.overflowX && !function(e3) {
    return "TEXTAREA" === e3.tagName;
  }(e2) && "visible" === n2[t2]);
};
var be = function(e2, t2) {
  var n2 = t2.ownerDocument, r2 = t2;
  do {
    if ("undefined" != typeof ShadowRoot && r2 instanceof ShadowRoot && (r2 = r2.host), Ee(e2, r2)) {
      var o2 = we(e2, r2);
      if (o2[1] > o2[2])
        return true;
    }
    r2 = r2.parentNode;
  } while (r2 && r2 !== n2.body);
  return false;
};
var Ee = function(e2, t2) {
  return "v" === e2 ? function(e3) {
    return ye(e3, "overflowY");
  }(t2) : function(e3) {
    return ye(e3, "overflowX");
  }(t2);
};
var we = function(e2, t2) {
  return "v" === e2 ? [(n2 = t2).scrollTop, n2.scrollHeight, n2.clientHeight] : function(e3) {
    return [e3.scrollLeft, e3.scrollWidth, e3.clientWidth];
  }(t2);
  var n2;
};
var Ce = function(e2) {
  return "changedTouches" in e2 ? [e2.changedTouches[0].clientX, e2.changedTouches[0].clientY] : [0, 0];
};
var Ne = function(e2) {
  return [e2.deltaX, e2.deltaY];
};
var Oe = function(e2) {
  return e2 && "current" in e2 ? e2.current : e2;
};
var xe = function(e2) {
  return "\n  .block-interactivity-".concat(e2, " {pointer-events: none;}\n  .allow-interactivity-").concat(e2, " {pointer-events: all;}\n");
};
var Re = 0;
var ke = [];
function Se(e2) {
  for (var t2 = null; null !== e2; )
    e2 instanceof ShadowRoot && (t2 = e2.host, e2 = e2.host), e2 = e2.parentNode;
  return t2;
}
var De;
var Pe = (De = function(t2) {
  var n2 = e.useRef([]), r2 = e.useRef([0, 0]), o2 = e.useRef(), i2 = e.useState(Re++)[0], a2 = e.useState(ue)[0], c2 = e.useRef(t2);
  e.useEffect(function() {
    c2.current = t2;
  }, [t2]), e.useEffect(function() {
    if (t2.inert) {
      document.body.classList.add("block-interactivity-".concat(i2));
      var e2 = function(e3, t3, n3) {
        if (n3 || 2 === arguments.length)
          for (var r3, o3 = 0, i3 = t3.length; o3 < i3; o3++)
            !r3 && o3 in t3 || (r3 || (r3 = Array.prototype.slice.call(t3, 0, o3)), r3[o3] = t3[o3]);
        return e3.concat(r3 || Array.prototype.slice.call(t3));
      }([t2.lockRef.current], (t2.shards || []).map(Oe), true).filter(Boolean);
      return e2.forEach(function(e3) {
        return e3.classList.add("allow-interactivity-".concat(i2));
      }), function() {
        document.body.classList.remove("block-interactivity-".concat(i2)), e2.forEach(function(e3) {
          return e3.classList.remove("allow-interactivity-".concat(i2));
        });
      };
    }
  }, [t2.inert, t2.lockRef.current, t2.shards]);
  var u2 = e.useCallback(function(e2, t3) {
    if ("touches" in e2 && 2 === e2.touches.length)
      return !c2.current.allowPinchZoom;
    var n3, i3 = Ce(e2), a3 = r2.current, u3 = "deltaX" in e2 ? e2.deltaX : a3[0] - i3[0], s3 = "deltaY" in e2 ? e2.deltaY : a3[1] - i3[1], l3 = e2.target, d3 = Math.abs(u3) > Math.abs(s3) ? "h" : "v";
    if ("touches" in e2 && "h" === d3 && "range" === l3.type)
      return false;
    var f3 = be(d3, l3);
    if (!f3)
      return true;
    if (f3 ? n3 = d3 : (n3 = "v" === d3 ? "h" : "v", f3 = be(d3, l3)), !f3)
      return false;
    if (!o2.current && "changedTouches" in e2 && (u3 || s3) && (o2.current = n3), !n3)
      return true;
    var p3 = o2.current || n3;
    return function(e3, t4, n4, r3, o3) {
      var i4 = function(e4, t5) {
        return "h" === e4 && "rtl" === t5 ? -1 : 1;
      }(e3, window.getComputedStyle(t4).direction), a4 = i4 * r3, c3 = n4.target, u4 = t4.contains(c3), s4 = false, l4 = a4 > 0, d4 = 0, f4 = 0;
      do {
        var p4 = we(e3, c3), m3 = p4[0], v3 = p4[1] - p4[2] - i4 * m3;
        (m3 || v3) && Ee(e3, c3) && (d4 += v3, f4 += m3), c3 = c3 instanceof ShadowRoot ? c3.host : c3.parentNode;
      } while (!u4 && c3 !== document.body || u4 && (t4.contains(c3) || t4 === c3));
      return (l4 && (o3 && Math.abs(d4) < 1 || !o3 && a4 > d4) || !l4 && (o3 && Math.abs(f4) < 1 || !o3 && -a4 > f4)) && (s4 = true), s4;
    }(p3, t3, e2, "h" === p3 ? u3 : s3, true);
  }, []), s2 = e.useCallback(function(e2) {
    var t3 = e2;
    if (ke.length && ke[ke.length - 1] === a2) {
      var r3 = "deltaY" in t3 ? Ne(t3) : Ce(t3), o3 = n2.current.filter(function(e3) {
        return e3.name === t3.type && (e3.target === t3.target || t3.target === e3.shadowParent) && (n3 = e3.delta, o4 = r3, n3[0] === o4[0] && n3[1] === o4[1]);
        var n3, o4;
      })[0];
      if (o3 && o3.should)
        t3.cancelable && t3.preventDefault();
      else if (!o3) {
        var i3 = (c2.current.shards || []).map(Oe).filter(Boolean).filter(function(e3) {
          return e3.contains(t3.target);
        });
        (i3.length > 0 ? u2(t3, i3[0]) : !c2.current.noIsolation) && t3.cancelable && t3.preventDefault();
      }
    }
  }, []), l2 = e.useCallback(function(e2, t3, r3, o3) {
    var i3 = { name: e2, delta: t3, target: r3, should: o3, shadowParent: Se(r3) };
    n2.current.push(i3), setTimeout(function() {
      n2.current = n2.current.filter(function(e3) {
        return e3 !== i3;
      });
    }, 1);
  }, []), d2 = e.useCallback(function(e2) {
    r2.current = Ce(e2), o2.current = void 0;
  }, []), f2 = e.useCallback(function(e2) {
    l2(e2.type, Ne(e2), e2.target, u2(e2, t2.lockRef.current));
  }, []), p2 = e.useCallback(function(e2) {
    l2(e2.type, Ce(e2), e2.target, u2(e2, t2.lockRef.current));
  }, []);
  e.useEffect(function() {
    return ke.push(a2), t2.setCallbacks({ onScrollCapture: f2, onWheelCapture: f2, onTouchMoveCapture: p2 }), document.addEventListener("wheel", s2, ge), document.addEventListener("touchmove", s2, ge), document.addEventListener("touchstart", d2, ge), function() {
      ke = ke.filter(function(e2) {
        return e2 !== a2;
      }), document.removeEventListener("wheel", s2, ge), document.removeEventListener("touchmove", s2, ge), document.removeEventListener("touchstart", d2, ge);
    };
  }, []);
  var m2 = t2.removeScrollBar, v2 = t2.inert;
  return e.createElement(e.Fragment, null, v2 ? e.createElement(a2, { styles: xe(i2) }) : null, m2 ? e.createElement(me, { gapMode: t2.gapMode }) : null);
}, re.useMedium(De), ne);
var Le = e.forwardRef(function(t2, n2) {
  return e.createElement(ie, q({}, t2, { ref: n2, sideCar: Pe }));
});
Le.classNames = ie.classNames;
var Te = Le;
var Me = /* @__PURE__ */ new WeakMap();
var _e = /* @__PURE__ */ new WeakMap();
var Ie = {};
var Ae = 0;
var Fe = function(e2, t2, n2) {
  void 0 === t2 && (t2 = function(e3) {
    return "undefined" == typeof document ? null : (Array.isArray(e3) ? e3[0] : e3).ownerDocument.body;
  }(e2)), void 0 === n2 && (n2 = "data-aria-hidden");
  var r2 = Array.isArray(e2) ? e2 : [e2];
  Ie[n2] || (Ie[n2] = /* @__PURE__ */ new WeakMap());
  var o2 = Ie[n2], i2 = [], a2 = /* @__PURE__ */ new Set(), c2 = function(e3) {
    e3 && !a2.has(e3) && (a2.add(e3), c2(e3.parentNode));
  };
  r2.forEach(c2);
  var u2 = function(e3) {
    !e3 || r2.indexOf(e3) >= 0 || Array.prototype.forEach.call(e3.children, function(e4) {
      if (a2.has(e4))
        u2(e4);
      else {
        var t3 = e4.getAttribute("aria-hidden"), r3 = null !== t3 && "false" !== t3, c3 = (Me.get(e4) || 0) + 1, s2 = (o2.get(e4) || 0) + 1;
        Me.set(e4, c3), o2.set(e4, s2), i2.push(e4), 1 === c3 && r3 && _e.set(e4, true), 1 === s2 && e4.setAttribute(n2, "true"), r3 || e4.setAttribute("aria-hidden", "true");
      }
    });
  };
  return u2(t2), a2.clear(), Ae++, function() {
    i2.forEach(function(e3) {
      var t3 = Me.get(e3) - 1, r3 = o2.get(e3) - 1;
      Me.set(e3, t3), o2.set(e3, r3), t3 || (_e.has(e3) || e3.removeAttribute("aria-hidden"), _e.delete(e3)), r3 || e3.removeAttribute(n2);
    }), --Ae || (Me = /* @__PURE__ */ new WeakMap(), Me = /* @__PURE__ */ new WeakMap(), _e = /* @__PURE__ */ new WeakMap(), Ie = {});
  };
};
var We = "Dialog";
var [je, Be] = function(t2, n2 = []) {
  let r2 = [];
  const o2 = () => {
    const n3 = r2.map((t3) => e.createContext(t3));
    return function(r3) {
      const o3 = (r3 == null ? void 0 : r3[t2]) || n3;
      return e.useMemo(() => ({ [`__scope${t2}`]: { ...r3, [t2]: o3 } }), [r3, o3]);
    };
  };
  return o2.scopeName = t2, [function(n3, o3) {
    const i2 = e.createContext(o3), c2 = r2.length;
    function u2(n4) {
      const { scope: r3, children: o4, ...u3 } = n4, s2 = (r3 == null ? void 0 : r3[t2][c2]) || i2, l2 = e.useMemo(() => u3, Object.values(u3));
      return (0, import_jsx_runtime.jsx)(s2.Provider, { value: l2, children: o4 });
    }
    return r2 = [...r2, o3], u2.displayName = n3 + "Provider", [u2, function(r3, a2) {
      const u3 = (a2 == null ? void 0 : a2[t2][c2]) || i2, s2 = e.useContext(u3);
      if (s2)
        return s2;
      if (void 0 !== o3)
        return o3;
      throw new Error(`\`${r3}\` must be used within \`${n3}\``);
    }];
  }, m(o2, ...n2)];
}(We);
var [$e, Ue] = je(We);
var Ke = (t2) => {
  const { __scopeDialog: n2, children: r2, open: o2, defaultOpen: i2, onOpenChange: c2, modal: u2 = true } = t2, s2 = e.useRef(null), l2 = e.useRef(null), [d2 = false, f2] = E({ prop: o2, defaultProp: i2, onChange: c2 });
  return (0, import_jsx_runtime.jsx)($e, { scope: n2, triggerRef: s2, contentRef: l2, contentId: y(), titleId: y(), descriptionId: y(), open: d2, onOpenChange: f2, onOpenToggle: e.useCallback(() => f2((e2) => !e2), [f2]), modal: u2, children: r2 });
};
Ke.displayName = We;
var ze = "DialogTrigger";
var He = e.forwardRef((e2, t2) => {
  const { __scopeDialog: n2, ...r2 } = e2, o2 = Ue(ze, n2), i2 = p(t2, o2.triggerRef);
  return (0, import_jsx_runtime.jsx)(R.button, { type: "button", "aria-haspopup": "dialog", "aria-expanded": o2.open, "aria-controls": o2.contentId, "data-state": ut(o2.open), ...r2, ref: i2, onClick: d(e2.onClick, o2.onOpenToggle) });
});
He.displayName = ze;
var Ye = "DialogPortal";
var [Xe, Ze] = je(Ye, { forceMount: void 0 });
var Ve = (t2) => {
  const { __scopeDialog: n2, forceMount: r2, children: o2, container: i2 } = t2, c2 = Ue(Ye, n2);
  return (0, import_jsx_runtime.jsx)(Xe, { scope: n2, forceMount: r2, children: e.Children.map(o2, (e2) => (0, import_jsx_runtime.jsx)(Y, { present: r2 || c2.open, children: (0, import_jsx_runtime.jsx)(H, { asChild: true, container: i2, children: e2 }) })) });
};
Ve.displayName = Ye;
var qe = "DialogOverlay";
var Ge = e.forwardRef((e2, t2) => {
  const n2 = Ze(qe, e2.__scopeDialog), { forceMount: r2 = n2.forceMount, ...o2 } = e2, i2 = Ue(qe, e2.__scopeDialog);
  return i2.modal ? (0, import_jsx_runtime.jsx)(Y, { present: r2 || i2.open, children: (0, import_jsx_runtime.jsx)(Je, { ...o2, ref: t2 }) }) : null;
});
Ge.displayName = qe;
var Je = e.forwardRef((e2, t2) => {
  const { __scopeDialog: n2, ...r2 } = e2, o2 = Ue(qe, n2);
  return (0, import_jsx_runtime.jsx)(Te, { as: w, allowPinchZoom: true, shards: [o2.contentRef], children: (0, import_jsx_runtime.jsx)(R.div, { "data-state": ut(o2.open), ...r2, ref: t2, style: { pointerEvents: "auto", ...r2.style } }) });
});
var Qe = "DialogContent";
var et = e.forwardRef((e2, t2) => {
  const n2 = Ze(Qe, e2.__scopeDialog), { forceMount: r2 = n2.forceMount, ...o2 } = e2, i2 = Ue(Qe, e2.__scopeDialog);
  return (0, import_jsx_runtime.jsx)(Y, { present: r2 || i2.open, children: i2.modal ? (0, import_jsx_runtime.jsx)(tt, { ...o2, ref: t2 }) : (0, import_jsx_runtime.jsx)(nt, { ...o2, ref: t2 }) });
});
et.displayName = Qe;
var tt = e.forwardRef((t2, n2) => {
  const r2 = Ue(Qe, t2.__scopeDialog), o2 = e.useRef(null), i2 = p(n2, r2.contentRef, o2);
  return e.useEffect(() => {
    const e2 = o2.current;
    if (e2)
      return Fe(e2);
  }, []), (0, import_jsx_runtime.jsx)(rt, { ...t2, ref: i2, trapFocus: r2.open, disableOutsidePointerEvents: true, onCloseAutoFocus: d(t2.onCloseAutoFocus, (e2) => {
    var _a;
    e2.preventDefault(), (_a = r2.triggerRef.current) == null ? void 0 : _a.focus();
  }), onPointerDownOutside: d(t2.onPointerDownOutside, (e2) => {
    const t3 = e2.detail.originalEvent, n3 = 0 === t3.button && true === t3.ctrlKey;
    (2 === t3.button || n3) && e2.preventDefault();
  }), onFocusOutside: d(t2.onFocusOutside, (e2) => e2.preventDefault()) });
});
var nt = e.forwardRef((t2, n2) => {
  const r2 = Ue(Qe, t2.__scopeDialog), o2 = e.useRef(false), i2 = e.useRef(false);
  return (0, import_jsx_runtime.jsx)(rt, { ...t2, ref: n2, trapFocus: false, disableOutsidePointerEvents: false, onCloseAutoFocus: (e2) => {
    var _a, _b;
    (_a = t2.onCloseAutoFocus) == null ? void 0 : _a.call(t2, e2), e2.defaultPrevented || (o2.current || ((_b = r2.triggerRef.current) == null ? void 0 : _b.focus()), e2.preventDefault()), o2.current = false, i2.current = false;
  }, onInteractOutside: (e2) => {
    var _a, _b;
    (_a = t2.onInteractOutside) == null ? void 0 : _a.call(t2, e2), e2.defaultPrevented || (o2.current = true, "pointerdown" === e2.detail.originalEvent.type && (i2.current = true));
    const n3 = e2.target, a2 = (_b = r2.triggerRef.current) == null ? void 0 : _b.contains(n3);
    a2 && e2.preventDefault(), "focusin" === e2.detail.originalEvent.type && i2.current && e2.preventDefault();
  } });
});
var rt = e.forwardRef((t2, n2) => {
  const { __scopeDialog: r2, trapFocus: o2, onOpenAutoFocus: i2, onCloseAutoFocus: s2, ...l2 } = t2, d2 = Ue(Qe, r2), f2 = e.useRef(null), m2 = p(n2, f2);
  return e.useEffect(() => {
    const e2 = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", e2[0] ?? V()), document.body.insertAdjacentElement("beforeend", e2[1] ?? V()), Z++, () => {
      1 === Z && document.querySelectorAll("[data-radix-focus-guard]").forEach((e3) => e3.remove()), Z--;
    };
  }, []), (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(W, { asChild: true, loop: true, trapped: o2, onMountAutoFocus: i2, onUnmountAutoFocus: s2, children: (0, import_jsx_runtime.jsx)(T, { role: "dialog", id: d2.contentId, "aria-describedby": d2.descriptionId, "aria-labelledby": d2.titleId, "data-state": ut(d2.open), ...l2, ref: m2, onDismiss: () => d2.onOpenChange(false) }) }), (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(ft, { titleId: d2.titleId }), (0, import_jsx_runtime.jsx)(pt, { contentRef: f2, descriptionId: d2.descriptionId })] })] });
});
var ot = "DialogTitle";
e.forwardRef((e2, t2) => {
  const { __scopeDialog: n2, ...r2 } = e2, o2 = Ue(ot, n2);
  return (0, import_jsx_runtime.jsx)(R.h2, { id: o2.titleId, ...r2, ref: t2 });
}).displayName = ot;
var it = "DialogDescription";
e.forwardRef((e2, t2) => {
  const { __scopeDialog: n2, ...r2 } = e2, o2 = Ue(it, n2);
  return (0, import_jsx_runtime.jsx)(R.p, { id: o2.descriptionId, ...r2, ref: t2 });
}).displayName = it;
var at = "DialogClose";
var ct = e.forwardRef((e2, t2) => {
  const { __scopeDialog: n2, ...r2 } = e2, o2 = Ue(at, n2);
  return (0, import_jsx_runtime.jsx)(R.button, { type: "button", ...r2, ref: t2, onClick: d(e2.onClick, () => o2.onOpenChange(false)) });
});
function ut(e2) {
  return e2 ? "open" : "closed";
}
ct.displayName = at;
var st = "DialogTitleWarning";
var [lt, dt] = function(t2, n2) {
  const r2 = e.createContext(n2);
  function o2(t3) {
    const { children: n3, ...o3 } = t3, i2 = e.useMemo(() => o3, Object.values(o3));
    return (0, import_jsx_runtime.jsx)(r2.Provider, { value: i2, children: n3 });
  }
  return o2.displayName = t2 + "Provider", [o2, function(o3) {
    const i2 = e.useContext(r2);
    if (i2)
      return i2;
    if (void 0 !== n2)
      return n2;
    throw new Error(`\`${o3}\` must be used within \`${t2}\``);
  }];
}(st, { contentName: Qe, titleName: ot, docsSlug: "dialog" });
var ft = ({ titleId: t2 }) => {
  const n2 = dt(st), r2 = `\`${n2.contentName}\` requires a \`${n2.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${n2.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${n2.docsSlug}`;
  return e.useEffect(() => {
    if (t2) {
      document.getElementById(t2) || console.error(r2);
    }
  }, [r2, t2]), null;
};
var pt = ({ contentRef: t2, descriptionId: n2 }) => {
  const r2 = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${dt("DialogDescriptionWarning").contentName}}.`;
  return e.useEffect(() => {
    var _a;
    const e2 = (_a = t2.current) == null ? void 0 : _a.getAttribute("aria-describedby");
    if (n2 && e2) {
      document.getElementById(n2) || console.warn(r2);
    }
  }, [r2, t2, n2]), null;
};
var mt = Ke;
var vt = He;
var ht = Ve;
var gt = Ge;
var yt = et;
var bt = ct;
var Et = ["color"];
var wt = (0, import_react.forwardRef)(function(e2, t2) {
  var n2 = e2.color, r2 = void 0 === n2 ? "currentColor" : n2, i2 = function(e3, t3) {
    if (null == e3)
      return {};
    var n3, r3, o2 = {}, i3 = Object.keys(e3);
    for (r3 = 0; r3 < i3.length; r3++)
      n3 = i3[r3], t3.indexOf(n3) >= 0 || (o2[n3] = e3[n3]);
    return o2;
  }(e2, Et);
  return (0, import_react.createElement)("svg", Object.assign({ width: "15", height: "15", viewBox: "0 0 15 15", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, i2, { ref: t2 }), (0, import_react.createElement)("path", { d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z", fill: r2, fillRule: "evenodd", clipRule: "evenodd" }));
});
var Ct = ({ color: e2 = "#00b4f7", textColor: r2 = "#fff", id: o2 = "prototypr", label: i2 = "Support me", padding: a2 = 0, width: c2 = 400, backgroundColor: u2 = "#fff", iframe: s2, buttonRadius: l2 = "8px" }) => {
  const [d2, f2] = (0, import_react.useState)(false);
  return import_react.default.createElement(mt, { open: d2, onOpenChange: f2 }, import_react.default.createElement(vt, { asChild: true }, import_react.default.createElement("div", { title: i2, className: "kofi-button w-fit text-sm hover:shadow-md transition transition-all duration-400 cursor-pointer px-3 h-[28px] flex flex-col justify-center", style: { backgroundColor: e2, borderRadius: l2 }, onClick: () => f2(!d2) }, import_react.default.createElement("div", { className: "kofitext gap-1 flex my-auto items-center" }, import_react.default.createElement("img", { src: "https://ko-fi.com/img/cup-border.png", className: "kofiimg", alt: "Ko-Fi button" }), import_react.default.createElement("div", { className: "flex my-auto text-xs items-center", style: { color: r2 } }, i2)))), import_react.default.createElement(ht, null, import_react.default.createElement(gt, { className: "fixed inset-0 bg-black bg-opacity-50 z-[9999]" }), import_react.default.createElement(yt, { style: { padding: a2, width: c2, backgroundColor: u2 }, className: "fixed  h-[712px] overflow-hidden top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 rounded-xl shadow-lg z-[9999]" }, import_react.default.createElement("div", { className: "relative w-full h-full" }, import_react.default.createElement("div", { className: "flex flex-col h-full z-10 justify-center items-center kofi-button" }, import_react.default.createElement("div", { className: "gap-1 flex my-auto items-center" }, import_react.default.createElement("div", { className: "flex flex-col gap-2" }, import_react.default.createElement("img", { src: "https://ko-fi.com/img/cup-border.png", className: "kofiimg !h-[auto] !w-[32px] !mx-auto animate-[kofi-wiggle_3s_infinite]", alt: "Ko-Fi button" }), import_react.default.createElement("div", { className: "mx-auto text-sm text-gray-600" }, "Loading...")))), import_react.default.createElement("div", { className: "z-20 absolute top-0 left-0 w-full h-full" }, s2 ? import_react.default.createElement("div", { style: { width: "100%", height: "100%", background: "transparent" }, dangerouslySetInnerHTML: { __html: s2 } }) : import_react.default.createElement("iframe", { id: "kofiframe", src: `https://ko-fi.com/${o2}/?hidefeed=true&widget=true&embed=true&preview=true`, style: { border: "none", width: "100%", background: "transparent" }, height: "712", title: "prototypr" }))), import_react.default.createElement(bt, { asChild: true }, import_react.default.createElement("button", { className: "absolute z-30 top-2 bg-gray-200 right-2 p-1 rounded-full hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200" }, import_react.default.createElement(wt, { className: "w-4 h-4 text-gray-500" }))))));
};
function Nt({ color: e2 = "#00b4f7", id: n2 = "prototypr", label: r2 = "Support me on Ko-Fi", size: o2 = "w-10 h-10", radius: i2 = "12px" }) {
  return import_react.default.createElement("div", { className: "flex  justify-start" }, import_react.default.createElement("div", { class: "btn-container" }, import_react.default.createElement("a", { title: r2, className: (r2 ? "kofi-button " : `rounded-full ${o2 || "w-10 h-10"} block flex justify-center`) + " rounded-full", style: { backgroundColor: e2, borderRadius: i2 }, href: "https://ko-fi.com/" + n2, target: "_blank", rel: "noopener noreferrer" }, import_react.default.createElement("span", { class: "kofitext" }, import_react.default.createElement("img", { src: "https://ko-fi.com/img/cup-border.png", class: "kofiimg", alt: "Ko-Fi button" }), r2 || null))));
}
function Ot({ attachOnScroll: e2 = false, id: t2 = "prototypr", label: n2 = "Support me", color: r2 = "#00b9fe", textColor: o2 = "#fff" }) {
  function a2() {
    window.innerHeight + window.scrollY >= document.body.scrollHeight / 2 && c2();
  }
  function c2() {
    e2 && window.removeEventListener("scroll", a2, false);
    var i2 = document.createElement("script");
    i2.setAttribute("src", "https://storage.ko-fi.com/cdn/scripts/overlay-widget.js"), i2.setAttribute("type", "text/javascript"), document.head.appendChild(i2), i2.onload = () => {
      var e3 = document.createElement("script");
      e3.setAttribute("type", "text/javascript"), e3.innerHTML = `
                window.kofiWidgetOverlay = kofiWidgetOverlay
                kofiWidgetOverlay.draw('${t2}', {
                    'type': 'floating-chat',
                    'floating-chat.donateButton.text': '${n2}',
                    'floating-chat.donateButton.background-color': '${r2}',
                    'floating-chat.donateButton.text-color': '${o2}'
                });
            `, document.head.appendChild(e3);
    };
  }
  return (0, import_react.useEffect)(() => {
    if ("undefined" != typeof window && !window.kofiWidgetOverlay) {
      if (e2)
        return window.addEventListener("scroll", a2, false), () => {
          window.removeEventListener("scroll", a2, false);
        };
      c2();
    }
  }, []), null;
}
function xt({ id: e2 = "prototypr" }) {
  return import_react.default.createElement("iframe", { id: "kofiframe", src: `https://ko-fi.com/${e2}/?hidefeed=true&widget=true&embed=true&preview=true`, style: { border: "none", width: "100%", padding: "4px", background: "#f9f9f9" }, height: "712", title: e2 });
}
export {
  Nt as KoFiButton,
  Ct as KoFiDialog,
  xt as KoFiPanel,
  Ot as KoFiWidget
};
/*! Bundled license information:

react/cjs/react-jsx-runtime.development.js:
  (**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=react-kofi.js.map
